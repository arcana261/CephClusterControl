swagger: "2.0"
info:
  version: "0.1"
  title: Kluster API
  description: |
    Provides mechanism to manage RBD related storage and VMs in a Keloud-Enabled cluster.
# during dev, should point to your local machine
host: localhost:3500
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  basic:
    type: basic
    description: http based authentication
paths:
  /me:
    x-swagger-router-controller: user
    get:
      summary: getCurrentUser
      description: returns information about currently logged on user
      operationId: getCurrentUser
      security:
        - basic: []
      x-required-role: user
      tags:
        - Users
      responses:
        200:
          description: returns information about currently logged on user
          schema:
            $ref: '#/definitions/User'
        500:
          $ref: '#/responses/InternalServerError'
  /users:
    x-swagger-router-controller: user
    get:
      summary: listUsers
      description: returns list of users
      operationId: listUsers
      security:
        - basic: []
      x-required-role: admin
      tags:
        - Users
      responses:
        200:
          description: returns list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      summary: addUser
      description: adds a new user
      operationId: addUser
      security:
        - basic: []
      x-required-role: admin
      tags:
        - Users
      parameters:
        - name: user
          in: body
          description: user information to add
          schema:
            $ref: '#/definitions/User'
          required: true
      responses:
        200:
          description: indicates new user was created
        400:
          $ref: '#/responses/BadRequest'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
  /users/{userName}:
    x-swagger-router-controller: user
    parameters:
      - name: userName
        in: path
        type: string
        description: username to manage
        required: true
    get:
      summary: getUser
      description: returns information about target user
      operationId: getUser
      security:
        - basic: []
      x-required-role: admin
      tags:
        - Users
      responses:
        200:
          description: returns information about requested user
          schema:
            $ref: '#/definitions/User'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteUser
      description: deletes a user
      operationId: deleteUser
      security:
        - basic: []
      x-required-role: admin
      tags:
        - Users
      responses:
        200:
          description: indicates user was deleted
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    patch:
      summary: updateUser
      description: updates a user
      operationId: updateUser
      security:
        - basic: []
      x-required-role: admin
      parameters:
        - name: user
          in: body
          description: user information to update
          schema:
            $ref: '#/definitions/User'
          required: true
      tags:
        - Users
      responses:
        200:
          description: indicates user was updated successfuly
        404:
          $ref: '#/responses/NotFound'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster:
    x-swagger-router-controller: cluster
    get:
      summary: getClusterList
      description: gets list of defined clusters
      operationId: getClusterList
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of defined clusters
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/ClusterConfig'
        500:
          $ref: '#/responses/InternalServerError'
    put:
      summary: addCluster
      description: add a new cluster
      operationId: addCluster
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      parameters:
        - name: cluster
          in: body
          description: new cluster to add
          schema:
            $ref: '#/definitions/ClusterConfig'
          required: true
      responses:
        200:
          description: indicates new cluster is created
          schema:
            $ref: '#/definitions/EmptyObject'
        409:
          $ref: '#/responses/Conflict'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/refresh:
    x-swagger-router-controller: cluster
    parameters:
      - $ref: '#/parameters/clusterName'
    post:
      summary: refreshCluster
      description: refresh information stored about a cluster
      operationId: refreshCluster
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      parameters:
        - name: refreshData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates that cluster data have been updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError' 
  /cluster/{clusterName}:
    x-swagger-router-controller: cluster
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: getCluster
      description: returns information about a specific cluster
      operationId: getCluster
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      responses:
        200:
          description: returns configuration for saved cluster
          schema:
            $ref: '#/definitions/ClusterConfig'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    patch:
      summary: updateCluster
      description: updates a cluster configuration
      operationId: updateCluster
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      parameters:
        - name: cluster
          in: body
          description: cluster config to update
          schema:
            $ref: '#/definitions/ClusterConfig'
          required: true
      responses:
        200:
          description: indicates cluster config is updated
          schema:
            $ref: '#/definitions/EmptyObject'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
    delete:
      summary: deleteCluster
      description: deletes a cluster configuration
      operationId: deleteCluster
      security:
        - basic: []
      x-required-role: user
      tags:
        - Cluster
      responses:
        200:
          description: indicates cluster config is deleted
          schema:
            $ref: '#/definitions/EmptyObject'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
  /cluster/{clusterName}/host:
    x-swagger-router-controller: host
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: listClusterHosts
      description: gets list of hosts and their status
      operationId: listClusterHosts
      security:
        - basic: []
      x-required-role: user
      tags:
        - Host
      responses:
        200:
          description: returns known agents and VMs in system
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/Host'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    post:
      summary: refreshClusterHosts
      description: refreshes known rpc hosts in cluster
      operationId: refreshClusterHosts
      security:
        - basic: []
      x-required-role: user
      tags:
        - Host
      parameters:
        - name: refreshData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates known hosts in cluster is updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/host/{hostName}:
    x-swagger-router-controller: host
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: hostName
        in: path
        description: name of requested host
        type: string
        required: true
    get:
      summary: getClusterHost
      description: returns information about requested hostname
      operationId: getClusterHost
      security:
        - basic: []
      x-required-role: user
      tags:
        - Host
      responses:
        200:
          description: returns information about requested user
          schema:
            $ref: '#/definitions/Host'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteClusterHost
      description: deletes a down or missing host
      operationId: deleteClusterHost
      security:
        - basic: []
      x-required-role: user
      tags:
        - Host
      responses:
        200:
          description: indictes host is deleted
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/ntp/tick:
    x-swagger-router-controller: ntp
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: getNtpTick
      description: gets approximate time difference between nodes
      operationId: getNtpTick
      security:
        - basic: []
      x-required-role: user
      tags:
        - NTP
      responses:
        200:
          description: returns approximate time difference between nodes
          schema:
            type: array
            items:
              type: object
              properties:
                host:
                  type: string
                  description: hostname of server node
                diff:
                  type: integer
                  description: difference of time in ms (milliseconds)
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/ntp/servers:
    x-swagger-router-controller: ntp
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: getNtpServers
      description: gets ntp sync status for nodes
      operationId: getNtpServers
      security:
        - basic: []
      x-required-role: user
      tags:
        - NTP
      responses:
        200:
          description: returns sync status with ntp servers
          schema:
            $ref: '#/definitions/NtpHostStatus'
    post:
      summary: forceNtpMakeStep
      description: force make step and sync time in nodes
      operationId: forceNtpMakeStep
      security:
        - basic: []
      x-required-role: user
      tags:
        - NTP
      responses:
        200:
          description: indicates makestep was successfuly issued
  /cluster/{clusterName}/rbd:
    x-swagger-router-controller: rbd
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: listRbdImages
      description: list rbd images in system
      operationId: listRbdImages
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: pool
          in: query
          description: optionally list only rbd images in certain rbd pool
          type: string
          required: false
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of rbd images
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/RbdImage'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    put:
      summary: createRbdImage
      description: create a new rbd image
      operationId: createRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: pool
          in: query
          description: optionally list only rbd images in certain rbd pool
          type: string
          required: false
          default: rbd
        - name: image
          in: body
          description: information about new rbd image to create
          schema:
            type: object
            properties:
              image:
                type: string
                description: name of new rbd image
              diskSize:
                type: integer
                description: size of new disk in MB (megabytes) to create
                minimum: 100
              fileSystem:
                $ref: '#/definitions/RbdFileSystem'
          required: true
      responses:
        200:
          description: indicates new rbd image was created successfuly
          schema:
            $ref: '#/definitions/RbdImage'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rbd/refresh:
    x-swagger-router-controller: rbd
    parameters:
      - $ref: '#/parameters/clusterName'
    post:
      summary: refreshRbdImages
      description: refreshes information about rbd images
      operationId: refreshRbdImages
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: refreshData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates that rbd images have been updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rbd/disk/{pool}/{imageName}:
    x-swagger-router-controller: rbd
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/imageName'
      - $ref: '#/parameters/pool'
    get:
      summary: getRbdImage
      description: gets information about rbd image
      operationId: getRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      responses:
        200:
          description: returns information about selected rbd image
          schema:
            $ref: '#/definitions/RbdImage'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteRbdImage
      description: deletes selected rbd image
      operationId: deleteRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      responses:
        200:
          description: indicates that rbd image was deleted successfuly
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rbd/disk/{pool}/{imageName}/extend:
    x-swagger-router-controller: rbd
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/imageName'
      - $ref: '#/parameters/pool'
    post:
      summary: extendRbdImage
      description: extends rbd image capacity
      operationId: extendRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: extendRequest
          in: body
          description: parameters to pass to extend rbd image
          required: true
          schema:
            type: object
            required:
              - size
            properties:
              size:
                type: integer
                description: size in MB (megabytes) to extend RBD image
                minimum: 100
      responses:
        200:
          description: indicates rbd image is extended successfuly
          schema:
            $ref: '#/definitions/RbdImage'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rbd/mount/{pool}/{imageName}:
    x-swagger-router-controller: rbd
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/imageName'
      - $ref: '#/parameters/pool'
    post:
      summary: mountRbdImage
      description: mount specified image
      operationId: mountRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: mountRequest
          in: body
          description: parameters to request image mount
          required: true
          schema:
            type: object
            required:
              - host
            properties:
              permanent:
                type: boolean
                description: whether rbd image should be mounted permanently (surviving reboot)
                default: false
              host:
                type: string
                description: target VM to mount on. it is optional, if not specified one will be picked automatically.
              readOnly:
                type: boolean
                description: can be used to mount image as readonly
                default: false
      responses:
        200:
          description: indicates image was mounted successfuly
          schema:
            $ref: '#/definitions/RbdImage'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: umountRbdImage
      description: unmounts rbd image
      operationId: umountRbdImage
      security:
        - basic: []
      x-required-role: user
      tags:
        - RBD
      parameters:
        - name: force
          in: query
          description: forcefully unmount if necessary
          required: false
          type: boolean
      responses:
        200:
          description: indicates rbd image was unmounted successfuly
          schema:
            $ref: '#/definitions/RbdImage'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rgw:
    x-swagger-router-controller: rgw
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: listRgwShares
      description: list rgw shares defined in cluster
      operationId: listRgwShares
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of RGW shares defined
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/RadosGatewayShare'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    put:
      summary: addRgwShare
      description: crate a new rgw user
      operationId: addRgwShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      parameters:
        - name: share
          in: body
          description: new share to create
          required: true
          schema:
            type: object
            required:
              - userName
              - fullName
              - email
            properties:
              userName:
                type: string
                description: name of rgw share
              fullName:
                type: string
                description: fullname of person holding share
              email:
                type: string
                description: email of person holding share
      responses:
        200:
          description: indicates new share was created
          schema:
            $ref: '#/definitions/RadosGatewayShare'
        409:
          $ref: '#/responses/Conflict'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rgw/{userName}:
    x-swagger-router-controller: rgw
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: userName
        in: path
        description: rgw username to query or change
        type: string
        required: true
    get:
      summary: getRgwShare
      description: gets information about a rgw share
      operationId: getRgwShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      responses:
        200:
          description: returns information about rgw share
          schema:
            $ref: '#/definitions/RadosGatewayShare'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteRgwShare      
      description: deletes rgw share
      operationId: deleteRgwShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      responses:
        200:
          description: indicates RGW share was deleted
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/rgw/{userName}/quota:
    x-swagger-router-controller: rgw
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: userName
        in: path
        description: rgw username to query or change
        type: string
        required: true
    delete:
      summary: deleteRgwQuota
      description: disables quota for rgw share
      operationId: deleteRgwQuota
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      responses:
        200:
          description: indicates quota was deleted from rgw share
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    post:
      summary: setRgwQuota
      description: enables quota for rgw share
      operationId: setRgwQuota
      security:
        - basic: []
      x-required-role: user
      tags:
        - RGW
      parameters:
        - name: capacity
          in: body
          description: new capacity of share in MB (megabytes)
          schema:
            type: integer
          required: true
      responses:
        200:
          description: indicates quota was successfuly set for rgw share
        404:
          $ref: '#/responses/NotFound'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/performance/{reportType}/{resourceType}/{resourceName}:
    x-swagger-router-controller: performance
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: reportType
        in: path
        description: type of requested report
        type: string
        required: true
        enum:
          - hourly
          - daily
          - weekly
          - monthly
          - yearly
      - name: resourceType
        in: path
        description: type of resource to query
        type: string
        required: true
        enum:
          - iscsi
          - samba
          - rgw
          - cluster
      - name: resourceName
        in: path
        description: name of resource to look for
        type: string
        required: true
    get:
      summary: listPerformancePoints
      description: gets list of performance points
      operationId: listPerformancePoints
      security:
        - basic: []
      x-required-role: user
      tags:
        - Performance
      parameters:
        - name: startDate
          in: query
          description: start interval of report
          type: string
          format: date-time
          required: true
        - name: endDate
          in: query
          description: end interval of report
          type: string
          format: date-time
          required: true
      responses:
        200:
          description: returns performance points
          schema:
            type: object
            properties:
              points:
                type: array
                items:
                  $ref: '#/definitions/PerformancePoint'
        413:
          $ref: '#/responses/PayloadTooLarge'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: listSambaShares
      description: gets list of samba shares defined
      operationId: listSambaShares
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of samba shares defined
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/SambaShare'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/refresh:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
    post:
      summary: refreshSambaShares
      description: refresh list of known samba shares
      operationId: refreshSambaShares
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: refreshData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates that samba information has been updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    post:
      summary: addSambaShare
      description: creates a new samba share
      operationId: addSambaShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: share
          in: body
          description: information about new samba share to create
          schema:
            type: object
            required:
              - image
              - pool
              - host
            properties:
              image:
                type: string
                description: rbd image name to mount for share
              pool:
                type: string
                description: pool in which rbd image resides in
              host:
                type: string
                description: host which will mount image
              comment:
                type: string
                description: a comment to show for share
                default: ''
              browsable:
                type: boolean
                description: whether share should be visible at server root
                default: false
              guest:
                $ref: '#/definitions/SambaPermission'
              acl:
                type: array
                items:
                  $ref: '#/definitions/SambaAcl'
          required: true
      responses:
        200:
          description: indicates new samba share was created
          schema:
            $ref: '#/definitions/SambaShare'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
    get:
      summary: getSambaShare
      description: returns information about a specific samba share
      operationId: getSambaShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      responses:
        200:  
          description: returns information about a specific samba share
          schema:
            $ref: '#/definitions/SambaShare'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteSambaShare
      description: used for deleting an existing samba share
      operationId: deleteSambaShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      responses:
        200:
          description: indicates that samba share was deleted successfuly
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/comment:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    patch:
      summary: updateSambaShareComment
      description: updates a share comment
      operationId: updateSambaShareComment
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: comment
          in: body
          description: new comment to apply on share
          schema:
            type: object
            required:
              - comment
            properties:
              comment:
                type: string
          required: true
      responses:
        200:
          description: indicates comment on samba share was successfuly updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/browsable:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    patch:
      summary: updateSambaShareBrowsable  
      description: updates a share browsable attribute
      operationId: updateSambaShareBrowsable
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: browsable
          in: body
          description: new browsable attribute to set on share
          schema:
            type: object
            properties:
              browsable:
                type: boolean
          required: true
      responses:
        200:
          description: indicates browsable attribute on samba share was successfuly updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/guest:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    patch:
      summary: updateSambaShareGuestPermission
      description: updates guest user access on samba share
      operationId: updateSambaShareGuestPermission
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: permission
          in: body
          description: new guest permission to apply
          schema:
            type: object
            properties:
              permission:
                $ref: '#/definitions/SambaPermission'
          required: true
      responses:
        200:
          description: indicates guest access permission was updated on samba share
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/acl:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    post:
      summary: addSambaShareUser
      description: create a new user credentials for samba share
      operationId: addSambaShareUser
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: acl
          in: body
          description: new user credentials to create
          schema:
            $ref: '#/definitions/SambaAcl'
          required: true
      responses:
        200:
          description: indicated user credentials was created
          schema:
            $ref: '#/definitions/EmptyObject'
        409:
          $ref: '#/responses/Conflict'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/acl/{userName}:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
      - name: userName
        in: path
        description: username to delete or edit
        type: string
        required: true
    delete:
      summary: deleteSambaShareUser
      description: deletes a user permission from samba
      operationId: deleteSambaShareUser
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: empty
          in: body
          description: empty request object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates user was deleted from share successfuly
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/acl/{userName}/password:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
      - name: userName
        in: path
        description: username to delete or edit
        type: string
        required: true
    patch:
      summary: updateSambaShareUserPassword
      description: updates password for a user in samba
      operationId: updateSambaShareUserPassword
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: password
          in: body
          description: new password to set
          schema:
            type: object
            properties:
              password:
                type: string
          required: true
      responses:
        200:
          description: indicates password was successfuly changed for user
          schema:
            $ref: '#/definitions/EmptyObject'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/acl/{userName}/permission:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
      - name: userName
        in: path
        description: username to delete or edit
        type: string
        required: true
    patch:
      summary: updateSambaShareUserPermission
      description: updates permission for a user in samba share
      operationId: updateSambaShareUserPermission
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: permission
          in: body
          description: new permission to set
          schema:
            type: object
            properties:
              permission:
                $ref: '#/definitions/SambaPermission'
          required: true
      responses:
        200:
          description: indicates permission was successfuly changed for user
          schema:
            $ref: '#/definitions/EmptyObject'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/samba/{shareName}/capacity:
    x-swagger-router-controller: samba
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/shareName'
    patch:
      summary: extendSambaShare
      description: extends size of samba share
      operationId: extendSambaShare
      security:
        - basic: []
      x-required-role: user
      tags:
        - Samba
      parameters:
        - name: capacity
          in: body
          description: size to increase in MB (megabytes)
          schema:
            type: object
            properties:
              capacity:
                type: integer
                minimum: 100
          required: true
      responses:
        200:
          description: indicates capacity was extended successfuly
          schema:
            $ref: '#/definitions/SambaShare'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
    post:
      summary: addScsiTarget
      description: adds a new iscsi target
      operationId: addScsiTarget
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: target
          in: body
          description: information about new iscsi target
          schema:
            type: object
            required:
              - name
              - domain
              - image
              - pool
              - size
              - host
            properties:
              name:
                type: string
                description: name of new iscsi share
              domain:
                type: string
                description: host and domain of iqn part of iscsi share like 'example.com'
              image:
                type: string
                description: rbd image name
              pool:
                type: string
                description: pool which rbd image resides in
              size:
                type: integer
                description: size of first LUN to create for iscsi share
                minimum: 100
              host:
                type: string
                description: hostname of VM that will host new iscsi target
          required: true
      responses:
        200:
          description: indicates new iscsi target was defined
          schema:
            $ref: '#/definitions/IScsiTarget'
        404:
          $ref: '#/responses/NotFound'
        400:
          $ref: '#/responses/BadRequest'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
    get:
      summary: listScsiTargets
      description: gets list of iscsi targets defined
      operationId: listScsiTargets
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of iscsi targets defined
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/IScsiTarget'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/refresh:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
    post:
      summary: refreshScsiShares
      description: refresh list of known iscsi shares
      operationId: refreshScsiShares
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: refreshData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates that iscsi shares have been updated
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/host:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
    get:
      summary: listScsiHosts
      description: returns list of host names serving iscsi targets
      operationId: listScsiHosts
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
        - Host
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns list of hosts
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/IScsiHost'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/host/{hostName}:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: hostName
        in: path
        description: name of requested host
        type: string
        required: true
    get:
      summary: getScsiHost
      description: returns information a host containing iscsi target
      operationId: getScsiHost
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
        - Host
      responses:
        200:
          description: returns requested host
          schema:
            $ref: '#/definitions/IScsiHost'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteScsiHost
      description: used to delete a missing iscsi host
      operationId: deleteScsiHost
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
        - Host
      parameters:
        - name: deleteData
          in: body
          description: empty object
          required: true
          schema:
            $ref: '#/definitions/EmptyObject'
      responses:
        200:
          description: indicates that iscsi host was successfuly deleted
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/host/{hostName}/auth:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - name: hostName
        in: path
        description: name of requested host
        type: string
        required: true
    post:
      summary: updateScsiPortalAuthentication
      description: updates or sets authentication on discovery of iscsi portal
      operationId: updateScsiPortalAuthentication
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
        - Host
      parameters:
        - name: auth
          in: body
          description: new authentication parameters to set
          schema:
            type: object
            required:
              - password
              - domain
            properties:
              password:
                $ref: '#/definitions/IScsiPassword'
              domain:
                type: string
                description: domain to apply to client id IQN e.g. "example.com"
          required: true
      responses:
        200:
          description: indicates authentication parameters was changed
          schema:
            $ref: '#/definitions/IScsiHost'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteScsiPortalAuthentication
      description: deletes portal authentication
      operationId: deleteScsiPortalAuthentication
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
        - Host
      responses:
        200:
          description: indicates authentication is deleted from portal
          schema:
            $ref: '#/definitions/IScsiHost'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/{targetName}:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/targetName'
    get:
      summary: getScsiTarget
      description: gets information about a specific iscsi target
      operationId: getScsiTarget
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      responses:
        200:
          description: returns information about requested target
          schema:
            $ref: '#/definitions/IScsiTarget'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteScsiTarget
      description: deletes an existing iscsi target
      operationId: deleteScsiTarget
      security:
        - basic: []
      tags:
        - iSCSI
      parameters:
        - name: remove
          in: body
          description: information about how to remove data
          required: true
          schema:
            type: object
            properties:
              destroyData:
                type: boolean
                description: whether to delete all data, this is irreversible
                default: false
      responses:
        200:
          description: indicates iscsi target was deleted
          schema:
            $ref: '#/definitions/EmptyObject'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/{targetName}/auth:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/targetName'
    post:
      summary: setScsiTargetAuthentication    
      description: set authentication on target
      operationId: setScsiTargetAuthentication
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: auth
          in: body
          description: authentication to set
          required: true
          schema:
            type: object
            properties:
              password:
                $ref: '#/definitions/IScsiPassword'
      responses:
        200:
          description: means that authentication is changed successfuly on target
          schema:
            $ref: '#/definitions/IScsiTarget'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteScsiTargetAuthentication
      description: deletes authentication from target
      operationId: deleteScsiTargetAuthentication
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      responses:
        200:
          description: means that authentication is deleted successfuly from target
          schema:
            $ref: '#/definitions/IScsiTarget'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/{targetName}/capacity:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/targetName'
    patch:
      summary: extendScsiTargetCapacity
      description: used for extending iscsi capacity
      operationId: extendScsiTargetCapacity
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: capacity
          in: body
          description: amount to increase in MB (megabytes)
          required: true
          schema:
            type: object
            properties:
              size:
                type: integer
                minimum: 100
      responses:
        200:
          description: means that capacity was successfuly extended
          schema:
            $ref: '#/definitions/IScsiTarget'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /cluster/{clusterName}/iscsi/{targetName}/lun:
    x-swagger-router-controller: iscsi
    parameters:
      - $ref: '#/parameters/clusterName'
      - $ref: '#/parameters/targetName'
    post:
      summary: addScsiTargetLun
      description: used for creating another LUN for iscsi target
      operationId: addScsiTargetLun
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: size
          in: body
          description: size of LUN in MB (megabytes)
          required: true
          schema:
            type: object
            required:
              - size
            properties:
              size:
                type: integer
                minimum: 100
      responses:
        200:
          description: means that new LUN was created
          schema:
            $ref: '#/definitions/IScsiTarget'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      summary: deleteScsiTargetLun
      description: used for deleting an LUN from iscsi target
      operationId: deleteScsiTargetLun
      security:
        - basic: []
      x-required-role: user
      tags:
        - iSCSI
      parameters:
        - name: lun
          in: body
          description: indicates which lun to delete
          required: true
          schema:
            type: object
            required:
              - index
            properties:
              index:
                type: integer
                description: index of lun to delete
                minimum: 0
              destroyData:
                type: boolean
                description: whether to destroy data as well (this is irreversible)
                default: false
      responses:
        200:
          description: means that LUN was successfuly deleted
          schema:
            $ref: '#/definitions/IScsiTarget'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /swagger:
    x-swagger-pipe: swagger_raw

parameters:
  listStart:
    name: start
    in: query
    type: integer
    description: starting offset to fetch list
    required: false
    minimum: 0
    default: 0
  listLength:
    name: length
    in: query
    type: integer
    description: number of items to fetch from list
    required: true
    minimum: 0
    default: 10
    maximum: 50
  clusterName:
    name: clusterName
    in: path
    description: name of requested cluster
    type: string
    required: true
  imageName:
    name: imageName
    in: path
    description: rbd image to manage
    type: string
    required: true
  pool:
    name: pool
    in: path
    description: pool name for rbd image
    type: string
    required: true
  shareName:
    name: shareName
    in: path
    description: name of samba share
    type: string
    required: true
  targetName:
    name: targetName
    in: path
    description: name of iscsi target
    type: string
    required: true

responses:
  Conflict:
    description: HTTP error 409 depicting a situation in which something exists already or does not
    schema:
      $ref: '#/definitions/SystemError'
  InternalServerError:
    description: HTTP error 500 caused by a programming error
    schema:
      $ref: '#/definitions/SystemError'
  NotFound:
    description: HTTP error 404 caused when looking for something that does not exist
    schema:
      $ref: '#/definitions/SystemError'
  BadRequest:
    description: HTTP error 400 caused when input parameters are in wrong format
    schema:
      $ref: '#/definitions/SystemError'
  PayloadTooLarge:
    description: HTTP error 413 caused when output generated is too much according to given parameters
    schema:
      $ref: '#/definitions/SystemError'
definitions:
  SystemError:
    type: object
    description: encapsulates error messages
    required:
      - code
      - message
      - stack
    example:
      code: 400
      message: just a bad request
      stack: test.js at line 1000
    properties:
      code:
        type: integer
        description: an integer which may provide more information about error
      message:
        type: string
        description: a text message which may provide more insight about error
      stack:
        type: string
        description: if debugging is enabled, may provide stackstack of exception
  MessageBrokerConfig:
    type: object
    description: |
      configuration about how to connect to message broker.
      currently only rabbitmq is supported
    required:
      - host
      - userName
    properties:
      host:
        type: string
        default: '192.168.21.55'
        description: host address of message broker server
      userName:
        type: string
        default: 'kaveh'
        description: username to use to connect to message broker
      password:
        type: string
        default: 'K@ve5'
        description: password to use to connect to message broker
      heartbeat:
        type: integer
        description: |
          number of seconds to send heartbeat and keep connection alive.
          do not change if not necessary.
        default: 10
      topic:
        type: string
        description: topic name used for communication. do not change if not necessary
        default: kaveh_cluster_ctrl
      timeout:
        type: integer
        default: 2000
        description: |
          miliseconds to timeout certain RPC calls to active agent services
          running on cluster nodes.
  ClusterConfig:
    type: object
    description: information about a registered cluster in system
    required:
      - name
      - broker
    properties:
      name:
        type: string
        description: name given to a cluster
      broker:
        $ref: '#/definitions/MessageBrokerConfig'
  DistroObject:
    type: object
    description: shows information about linux distribution running on a host
    required:
      - centos
      - ubuntu
      - version
    properties:
      centos:
        type: boolean
        description: 'true if distribution is centos based'
      ubuntu:
        type: boolean
        description: 'true if distribution is ubuntu based'
      version:
        type: string
        description: version of operating system running on host
  Host:
    type: object
    description: shows information about a node agent
    required:
      - cluster
      - types
      - hostname
      - version
      - ip
      - distro
      - status
    properties:
      cluster:
        type: string
        description: cluster name in which host resides in
      types:
        type: array
        description: plugins enabled on host node
        items:
          type: string
      hostname:
        type: string
        description: hostname for node agent
      version:
        type: string
        description: version of package running on host node
      ip:
        type: array
        description: list of ip addresses for node host
        items:
          type: string
      distro:
        $ref: '#/definitions/DistroObject'
      status:
        type: string
        description: shows host status
        enum:
          - up
          - down
  IScsiPassword:
    type: string
    description: iscsi compatible password string
    pattern: '^([a-z0-9A-Z@#$%]{12})?$'
  IScsiAuthentication:
    type: object
    description: encapsulates CHAP authentication credentials
    required:
      - userId
      - password
    properties:
      enabled:
        type: boolean
        description: whether authentication is enabled
      userId:
        type: string
        description: chap iQN
      password:
        $ref: '#/definitions/IScsiPassword'
  IScsiIqn:
    type: object
    description: shows parsed IQN information
    required:
      - year
      - month
      - name
      - tag
    properties:
      year:
        type: integer
        description: year part
      month:
        type: integer
        description: month part
      name:
        type: string
        description: name of iSCSI share
      domain:
        type: string
        description: domain part
      tag:
        type: string
        description: tag part
  IScsiLun:
    type: object
    description: shows size and status of a disk LUN in an iSCSI target
    properties:
      size:
        type: integer
        description: size of disk LUN in MB (megabytes)
        minimum: 0
      status:
        type: string
        description: whether lun is healthy or not
        enum:
          - up
          - missing
  IScsiTarget:
    type: object
    description: shows information about an iSCSI target
    required:
      - iqn
      - stringifiedIqn
      - capacity
      - used
      - allocated
      - authentication
      - name
      - host
      - status
      - cluster
      - image
      - pool
    properties:
      name:
        type: string
        description: target name excluding parts in iqn relating to date and domain
      iqn: 
        $ref: '#/definitions/IScsiIqn'
      stringifiedIqn:
        type: string
        description: full IQN as an string
      authentication:
        $ref: '#/definitions/IScsiAuthentication'
      host:
        type: string
        description: hostname of node containing iscsi target
      cluster:
        type: string
        description: name of cluster hosting target
      capacity:
        type: integer
        description: amount in MB (megabyte) of iSCSI capacity
      used:
        type: integer
        description: amount used in MB (megabyte) of iSCSI share
      allocated:
        type: integer
        description: amount in MB (megabyte) of iSCSI capacity currently allocated to LUNs
      image:
        type: string
        description: rbd image used for LUNs
      pool:
        type: string
        description: rbd pool in which image resides
      luns:
        description: size of LUNs in MB (megabytes)
        type: array
        items:
          $ref: '#/definitions/IScsiLun'
      status:
        type: string
        description: shows status of iscsi target
        enum:
          - up
          - missing
          - down
          - deleting
  IScsiHost:
    type: object
    description: shows information about an iscsi enabled host
    required:
      - discovery
    properties:
      discovery:
        $ref: '#/definitions/IScsiAuthentication'
      host:
        $ref: '#/definitions/Host'
  SambaPermission:
    type: string
    description: describes permission a user has to a share
    enum:
      - read
      - write
      - denied
  SambaAcl:
    type: object
    description: describes credentials a user has to a share
    required:
      - permission
      - userName
    properties:
      permission:
        $ref: '#/definitions/SambaPermission'
      password:
        type: string
        description: password to use for accessing share
      userName:
        type: string
        description: username to use for accessing share
  SambaShare:
    type: object
    description: describes a samba share
    required:
      - name
      - browsable
      - image
      - pool
      - cluster
      - guest
      - acl
    properties:
      name:
        type: string
        description: name of samba share
      comment:
        type: string
        description: a comment set for a samba share
      browsable:
        type: boolean
        description: 'if set to false will hide share'
      image:
        type: string
        description: RBD image for share
      pool:
        type: string
        description: RBD pool containing image
      capacity:
        type: integer
        description: amount in MB (megabyte) of samba share capacity
      used:
        type: integer
        description: amount in MB (megabyte) of samba share
      cluster:
        type: string
        description: cluster name containing samba share
      host:
        type: string
        description: host vm containing samba share
      guest:
        $ref: '#/definitions/SambaPermission'
      acl:
        type: array
        description: list of user credentials for this samba share
        items:
          $ref: '#/definitions/SambaAcl'
      status:
        type: string
        description: whether samba share is healthy or not
        enum:
          - up
          - missing
  PerformancePoint:
    type: object
    description: shows performance collected
    required:
      - capacity
      - used
      - sampled
    properties:
      capacity:
        type: integer
        description: capacity of entity in MB (megabytes)
      used:
        type: integer
        description: usage of entity in MB (megabytes)
      sampled:
        type: string
        format: date-time
        description: date/time in UTC of sample
  RadosGatewayShare:
    type: object
    description: shows a share defined in RGW
    required:
      - userName
      - fullName
      - email
      - accessKey
      - secretKey
      - hasQuota
      - capacity
      - used
      - status
    properties:
      userName:
        type: string
        description: username that can access rgw share
      fullName:
        type: string
        description: full name of user
      email:
        type: string
        description: email of user
      accessKey:
        type: string
        description: S3 access key
      secretKey:
        type: string
        description: S3 secret key
      hasQuota:
        type: boolean
        description: whether quota is enabled for share
      capacity:
        type: integer
        description: capacity quota of user in MB (megabytes)
      used:
        type: integer
        description: usage of quota of user in MB (megabytes)
      status:
        type: string
        description: whether rgw share is healthy or not
        enum:
          - up
          - missing
  RbdFileSystem:
    type: string
    description: shows compatible filesystem used for rbd images
    default: xfs
    enum:
      - unknown
      - bfs
      - cramfs
      - ext2
      - ext3
      - ext4
      - ext4dev
      - fat
      - minix
      - msdos
      - ntfs
      - vfat
      - xfs
  RbdMountPoint:
    description: shows location of rbd mount point
    type: object
    required:
      - location
      - host
      - rbdId
      - device
    properties:
      location:
        type: string
        description: filesystem mount point
      host:
        type: string
        description: hostname of VM node where rbd image is mounted
      rbdId:
        type: integer
        description: rbd device id
      device:
        type: string
        description: rbd device string
      readOnly:
        type: boolean
        description: 'true if rbd image was mounted only as readonly'
  RbdImage:
    type: object
    description: describes an rbd image
    required:
      - image
      - status
    properties:
      diskSize:
        type: integer
        description: size of disk in MB (megabytes)
      image:
        type: string
        description: rbd image which was mounted
      diskUsed:
        type: integer
        description: used disk space in MB (megabytes)
      fileSystem:
        $ref: '#/definitions/RbdFileSystem'
      status:
        type: string
        description: whether image is healthy or not
        enum:
          - up
          - missing
          - failed
      isMounted:
        type: boolean
        description: whether mountpoint refers to a valid location
      mountPoint:
        $ref: '#/definitions/RbdMountPoint'
  NtpServerStatus:
    type: object
    description: shows ntp sync status to a remote ntp server
    required:
      - server
      - type
      - status
      - stratum
    properties:
      server:
        type: string
        description: ntp server hostname
      type:
        type: string
        description: ntp server type
        enum:
          - server
          - peer
          - local
      status:
        type: string
        description: sync status to ntp server
        enum:
          - synced
          - combined
          - ignored
      stratum:
        type: integer
        description: stratum of ntp server (it's level)
  NtpHostStatus:
    type: object
    description: shows ntp sync status for a host
    required:
      - hostname
      - servers
    properties:
      hostname:
        type: string
        description: hostname of node
      servers:
        type: array
        description: lists sync status for specified host
        items:
          $ref: '#/definitions/NtpServerStatus'
  User:
    type: object
    description: depicts a user on the system
    required:
      - userName
      - roles
    properties:
      userName:
        type: string
        description: username
      password:
        type: string
        description: user password
      roles:
        type: array
        description: lists various roles owned by user
        items:
          type: string
  EmptyObject:
    type: object
    description: 'an object with no property'
      
      
        
